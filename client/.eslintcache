[{"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/index.js":"1","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/App.js":"2","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/reportWebVitals.js":"3","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/services/index.js":"4","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Nav.jsx":"5","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Home.jsx":"6","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Postsform.jsx":"7","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Footer.jsx":"8","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Comments.jsx":"9","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/CommentList.jsx":"10","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Commentform.jsx":"11","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Resources.jsx":"12"},{"size":587,"mtime":1611193075000,"results":"13","hashOfConfig":"14"},{"size":1350,"mtime":1611449048000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611172659000,"results":"16","hashOfConfig":"14"},{"size":316,"mtime":1611348592000,"results":"17","hashOfConfig":"14"},{"size":561,"mtime":1611449094000,"results":"18","hashOfConfig":"14"},{"size":813,"mtime":1611338132000,"results":"19","hashOfConfig":"14"},{"size":1660,"mtime":1611443719000,"results":"20","hashOfConfig":"14"},{"size":343,"mtime":1611293627000,"results":"21","hashOfConfig":"14"},{"size":1639,"mtime":1611443939000,"results":"22","hashOfConfig":"14"},{"size":461,"mtime":1611362161000,"results":"23","hashOfConfig":"14"},{"size":1611,"mtime":1611444192000,"results":"24","hashOfConfig":"14"},{"size":1843,"mtime":1611449687000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"p23hks",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/index.js",[],["58","59"],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/App.js",["60","61","62"],"import './App.css';\nimport axios from \"axios\";\nimport { baseURL, config } from \"./services\";\nimport { useEffect, useState } from \"react\";\nimport Nav from \"./components/Nav\"\nimport Home from \"./components/Home\"\nimport Postsform from './components/Postsform';\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Comments from \"./components/Comments\";\nimport Resources from \"./components/Resources\"\n\nfunction App() {\n  {/* save posts in state */}\n  const [posts, setPosts] = useState([]);\n  const [toggleFetch, setToggleFetch] = useState(false);\n  {/* get data from API */}\n  useEffect(() => {\n    const getPosts = async () => {\n      const resp = await axios.get(baseURL, config);\n      setPosts(resp.data.records);\n      console.log(resp)\n    };\n    getPosts();\n  }, [toggleFetch]);\n    return (\n      <div className=\"App\">\n        <Nav />\n      <Switch>\n        <Route exact path= \"/\">\n          <Home posts={posts} />\n        </Route>\n        <Route path = \"/newpost\">\n          <Postsform setToggleFetch={setToggleFetch} />\n        </Route>\n          <Route path = \"/posts/:id\">\n            <Comments posts={posts} />\n          </Route>\n          <Route>\n            <Resources path = \"/resources\"/>\n          </Route>\n      </Switch>\n          <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/reportWebVitals.js",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/services/index.js",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Nav.jsx",["63"],"import { Link } from \"react-router-dom\";\n\n\nfunction Nav() {\n  return (\n    <div>\n      <nav>\n        <ul>\n          <Link to=\"/newpost\">\n            <li id=\"post\">Post Form</li>\n          </Link>\n          <Link to= \"\">\n            <li id=\"feed\"> Mental Health Resources</li>\n          </Link>\n          \n      </ul>\n          <img src= \"https://ychef.files.bbci.co.uk/976x549/p08vpmjp.webp\"/>\n        <Link to=\"/\">\n          <h1>MindMilk</h1> \n        </Link>\n      <h2>Milk for the Mind</h2>\n        \n    </nav>\n\n    </div>\n  )\n}\nexport default Nav;","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Home.jsx",["64"],"\nimport { Link } from \"react-router-dom\"\n\nfunction Home(props) {\n  \n  const sortedPosts = props.posts.sort((a,b) => {\n    return new Date(b.createdTime).getTime() - new Date(a.createdTime).getTime()\n  })\n  console.log(props.posts)\n  console.log(sortedPosts)\n\n  return (\n    <div>\n      <main>\n        <h2>MindMilk Feed</h2>\n        {sortedPosts.map((post) => {\n          console.log(post)\n          return (\n            <div key={post.id} className= \"post\">\n              <h1>{post.fields.name} </h1>\n              <img className= \"icons\" src= {post.fields.image}/>\n              <p>{post.fields.posts} </p>\n              <Link to={`/posts/${post.id}`} >\n               <button>Comments</button>\n              </Link>\n            </div>\n          )\n        })}\n      </main>\n    </div>\n  )\n}\n\nexport default Home;","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Postsform.jsx",["65"],"import { useState } from \"react\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\nimport { useHistory } from \"react-router-dom\"\nimport useSound from \"use-sound\";\nimport Pour from \"../audio/pouring.mp3\"\n\n\n\nfunction Postsform(props) {\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const history = useHistory()\n  \n  let audio = new Audio(Pour)\n  const start = () => {\n    audio.play()\n  }\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const fields = {\n      name:name,\n      image:image,\n      posts:post,\n    };\n    await axios.post(baseURL, { fields }, config);\n    props.setToggleFetch((prev) => !prev);\n    history.push(\"/\")\n    \n  };\n  return (\n    \n    <div>\n      <form className=\"postform\" onSubmit={handleSubmit}>\n      <h4>Make a New MindMilk Post!</h4>\n      <label htmlFor=\"name\">Name:</label>\n      <input\n        name=\"name\"\n          type=\"text\"\n          placeholder= \"Anonymous\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <label htmlFor=\"image\">Image:</label>\n      <input\n          name=\"image\"\n          type=\"text\"\n          placeholder= \"URL\"\n        value={image}\n        onChange={(e) => setImage(e.target.value)}\n      />\n      <label htmlFor=\"post\">Post:</label>\n      <input\n        name=\"post\"\n          type=\"textarea\"\n          placeholder= \"Post\"\n        value={post}\n        onChange={(e) => setPost(e.target.value)}\n      />\n      \n        <button type=\"submit\" onClick={start} >Get Some MindMilk!</button>\n    </form>\n    </div>\n  )\n}\nexport default Postsform;","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Footer.jsx",["66","67"],"function Footer() {\n  return (\n    <div>\n      <footer>\n        <div>\n        <img src=\"https://img.icons8.com/fluent/48/000000/linkedin.png\"/>\n        Copyright @ 2021\n        Author: Ghelila Mascio\n        <img src=\"https://img.icons8.com/bubbles/50/000000/github.png\" />\n          </div>\n       </footer>\n</div>\n  )\n}\nexport default Footer;","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Comments.jsx",["68","69"],"import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { commentURL, config } from \"../services\";\nimport axios from \"axios\";\nimport CommentList from \"../components/CommentList\"\nimport Commentform from \"../components/Commentform.jsx\"\n\nfunction Comments(props) {\n  // const [name, setName] = useState(\"\");\n  // const [image, setImage] = useState(\"\");\n  // const [comment, setComment] = useState(\"\");\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   const fields = {\n  //     name:name,\n  //     image:image,\n  //     comments:comment,\n  //   };\n  //   await axios.post(baseURL, { fields }, config);\n  //   props.setToggleFetch((prev) => !prev);\n\n  // };\n  const [comments, setComments] = useState(\"\");\n  const params = useParams();\n\n  useEffect(() => {\n    const getComments = async () => {\n      const resp = await axios.get(commentURL, config);\n      setComments(resp.data.records);\n    };\n    getComments();\n  }, []);\n\n  const specificPost = props.posts.filter((post) => post.id == params.id);\n\n  \n\n  if (!specificPost) {\n    return (\n      <div>\n        <h4>Loading...</h4>\n      </div>\n    );\n  }\n  return (\n    <main>\n      <h2>Comments Feed</h2>\n      <div className=\"post\">\n        <h1>{specificPost[0].fields.name}</h1>\n        <img className=\"icons\" src={specificPost[0].fields.image} />\n        <p>{specificPost[0].fields.posts}</p>\n\n        \n        \n      </div>\n      <div>\n      {comments && \n          <CommentList comments={comments} id={params.id} />\n        \n        }\n        <Commentform/>\n\n        </div>\n    </main>\n  );\n}\n\nexport default Comments;\n","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/CommentList.jsx",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Commentform.jsx",["70","71"],"import React from 'react'\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport Pour from \"../audio/pouring.mp3\"\n\nfunction Commentform(props) {\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const fields = {\n      name,\n      image,\n      comment,\n    };\n    await axios.post(baseURL, { fields }, config);\n    props.setToggleFetch((prev) => !prev);\n    \n    \n  };\n  let audio = new Audio(Pour)\n  const start = () => {\n    audio.play()\n  }\n\n  return (\n    <div>\n       <form className=\"postform\" onSubmit={handleSubmit}>\n      <h4>Post a MindMilk Comment!</h4>\n      <label htmlFor=\"name\">Name:</label>\n      <input\n        name=\"name\"\n          type=\"text\"\n          placeholder= \"Anonymous\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <label htmlFor=\"image\">Image:</label>\n      <input\n          name=\"image\"\n          type=\"text\"\n          placeholder= \"URL\"\n        value={image}\n        onChange={(e) => setImage(e.target.value)}\n      />\n      <label htmlFor=\"post\">Post:</label>\n      <input\n        name=\"post\"\n          type=\"textarea\"\n          placeholder= \"Comment\"\n        value={comment}\n        onChange={(e) => setComment(e.target.value)}\n      />\n      \n        <button type=\"submit\" onClick={start} >Post Some MindMilk!</button>\n    </form>\n    </div>\n  )\n}\n\nexport default Commentform\n","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Resources.jsx",["72","73","74","75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":8,"column":10,"nodeType":"83","messageId":"84","endLine":8,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":14,"column":3,"nodeType":"87","messageId":"88","endLine":14,"endColumn":30},{"ruleId":"85","severity":1,"message":"86","line":17,"column":3,"nodeType":"87","messageId":"88","endLine":17,"endColumn":28},{"ruleId":"89","severity":1,"message":"90","line":17,"column":11,"nodeType":"91","endLine":17,"endColumn":77},{"ruleId":"89","severity":1,"message":"90","line":21,"column":15,"nodeType":"91","endLine":21,"endColumn":65},{"ruleId":"81","severity":1,"message":"92","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":6,"column":9,"nodeType":"91","endLine":6,"endColumn":74},{"ruleId":"89","severity":1,"message":"90","line":9,"column":9,"nodeType":"91","endLine":9,"endColumn":74},{"ruleId":"93","severity":1,"message":"94","line":34,"column":61,"nodeType":"95","messageId":"96","endLine":34,"endColumn":63},{"ruleId":"89","severity":1,"message":"90","line":50,"column":9,"nodeType":"91","endLine":50,"endColumn":69},{"ruleId":"81","severity":1,"message":"97","line":4,"column":20,"nodeType":"83","messageId":"84","endLine":4,"endColumn":29},{"ruleId":"81","severity":1,"message":"98","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":24,"column":9,"nodeType":"91","endLine":24,"endColumn":164},{"ruleId":"99","severity":1,"message":"100","line":27,"column":9,"nodeType":"91","endLine":27,"endColumn":199},{"ruleId":"99","severity":1,"message":"100","line":30,"column":9,"nodeType":"91","endLine":30,"endColumn":58},{"ruleId":"99","severity":1,"message":"100","line":33,"column":9,"nodeType":"91","endLine":33,"endColumn":74},{"ruleId":"99","severity":1,"message":"100","line":36,"column":9,"nodeType":"91","endLine":36,"endColumn":105},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useSound' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useHistory' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]