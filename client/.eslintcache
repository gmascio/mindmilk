[{"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/index.js":"1","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/App.js":"2","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/reportWebVitals.js":"3","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/services/index.js":"4","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Nav.jsx":"5","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Home.jsx":"6","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Postsform.jsx":"7","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Footer.jsx":"8","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Comments.jsx":"9","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/CommentList.jsx":"10"},{"size":587,"mtime":1611193075000,"results":"11","hashOfConfig":"12"},{"size":1221,"mtime":1611334082000,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611172659000,"results":"14","hashOfConfig":"12"},{"size":316,"mtime":1611348592000,"results":"15","hashOfConfig":"12"},{"size":551,"mtime":1611298634000,"results":"16","hashOfConfig":"12"},{"size":813,"mtime":1611338132000,"results":"17","hashOfConfig":"12"},{"size":1470,"mtime":1611362944000,"results":"18","hashOfConfig":"12"},{"size":343,"mtime":1611293627000,"results":"19","hashOfConfig":"12"},{"size":1572,"mtime":1611361742000,"results":"20","hashOfConfig":"12"},{"size":461,"mtime":1611362161000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"p23hks",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/index.js",[],["47","48"],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/App.js",["49","50","51"],"import './App.css';\nimport axios from \"axios\";\nimport { baseURL, config } from \"./services\";\nimport { useEffect, useState } from \"react\";\nimport Nav from \"./components/Nav\"\nimport Home from \"./components/Home\"\nimport Postsform from './components/Postsform';\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Comments from \"./components/Comments\";\n\nfunction App() {\n  {/* save posts in state */}\n  const [posts, setPosts] = useState([]);\n  const [toggleFetch, setToggleFetch] = useState(false);\n  {/* get data from API */}\n  useEffect(() => {\n    const getPosts = async () => {\n      const resp = await axios.get(baseURL, config);\n      setPosts(resp.data.records);\n      console.log(resp)\n    };\n    getPosts();\n  }, [toggleFetch]);\n    return (\n      <div className=\"App\">\n        <Nav />\n      <Switch>\n        <Route exact path= \"/\">\n          <Home posts={posts} />\n        </Route>\n        <Route path = \"/newpost\">\n          <Postsform setToggleFetch={setToggleFetch} />\n        </Route>\n          <Route path = \"/posts/:id\">\n            <Comments posts={posts} />\n          </Route>\n      </Switch>\n          <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/reportWebVitals.js",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/services/index.js",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Nav.jsx",["52"],"import { Link } from \"react-router-dom\";\n\n\nfunction Nav() {\n  return (\n    <div>\n      <nav>\n        <ul>\n          <Link to=\"/newpost\">\n            <li id=\"post\">Post Form</li>\n          </Link>\n          <Link to= \"\">\n            <li id=\"feed\"> Mental Health Resources</li>\n          </Link>\n          \n      </ul>\n          <img src= \"https://ychef.files.bbci.co.uk/976x549/p08vpmjp.webp\"/>\n        <Link to=\"/\">\n          <h1>MindMilk</h1> \n        </Link>\n      <h2>Milk for the Mind</h2>\n        \n    </nav>\n\n    </div>\n  )\n}\nexport default Nav;","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Home.jsx",["53"],"\nimport { Link } from \"react-router-dom\"\n\nfunction Home(props) {\n  \n  const sortedPosts = props.posts.sort((a,b) => {\n    return new Date(b.createdTime).getTime() - new Date(a.createdTime).getTime()\n  })\n  console.log(props.posts)\n  console.log(sortedPosts)\n\n  return (\n    <div>\n      <main>\n        <h2>MindMilk Feed</h2>\n        {sortedPosts.map((post) => {\n          console.log(post)\n          return (\n            <div key={post.id} className= \"post\">\n              <h1>{post.fields.name} </h1>\n              <img className= \"icons\" src= {post.fields.image}/>\n              <p>{post.fields.posts} </p>\n              <Link to={`/posts/${post.id}`} >\n               <button>Comments</button>\n              </Link>\n            </div>\n          )\n        })}\n      </main>\n    </div>\n  )\n}\n\nexport default Home;","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Postsform.jsx",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Footer.jsx",["54","55"],"function Footer() {\n  return (\n    <div>\n      <footer>\n        <div>\n        <img src=\"https://img.icons8.com/fluent/48/000000/linkedin.png\"/>\n        Copyright @ 2021\n        Author: Ghelila Mascio\n        <img src=\"https://img.icons8.com/bubbles/50/000000/github.png\" />\n          </div>\n       </footer>\n</div>\n  )\n}\nexport default Footer;","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Comments.jsx",["56","57"],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/CommentList.jsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":8,"column":10,"nodeType":"64","messageId":"65","endLine":8,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":13,"column":3,"nodeType":"68","messageId":"69","endLine":13,"endColumn":30},{"ruleId":"66","severity":1,"message":"67","line":16,"column":3,"nodeType":"68","messageId":"69","endLine":16,"endColumn":28},{"ruleId":"70","severity":1,"message":"71","line":17,"column":11,"nodeType":"72","endLine":17,"endColumn":77},{"ruleId":"70","severity":1,"message":"71","line":21,"column":15,"nodeType":"72","endLine":21,"endColumn":65},{"ruleId":"70","severity":1,"message":"71","line":6,"column":9,"nodeType":"72","endLine":6,"endColumn":74},{"ruleId":"70","severity":1,"message":"71","line":9,"column":9,"nodeType":"72","endLine":9,"endColumn":74},{"ruleId":"73","severity":1,"message":"74","line":33,"column":61,"nodeType":"75","messageId":"76","endLine":33,"endColumn":63},{"ruleId":"70","severity":1,"message":"71","line":49,"column":9,"nodeType":"72","endLine":49,"endColumn":69},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]