[{"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/index.js":"1","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/App.js":"2","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/reportWebVitals.js":"3","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/services/index.js":"4","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Nav.jsx":"5","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Home.jsx":"6","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Postsform.jsx":"7","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Footer.jsx":"8","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Comments.jsx":"9","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/CommentList.jsx":"10","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Commentform.jsx":"11","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Resources.jsx":"12","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Modallist.jsx":"13"},{"size":587,"mtime":1611193075000,"results":"14","hashOfConfig":"15"},{"size":1322,"mtime":1611600143000,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1611172659000,"results":"17","hashOfConfig":"15"},{"size":316,"mtime":1611348592000,"results":"18","hashOfConfig":"15"},{"size":553,"mtime":1611607345000,"results":"19","hashOfConfig":"15"},{"size":1530,"mtime":1611600333000,"results":"20","hashOfConfig":"15"},{"size":1783,"mtime":1611600115000,"results":"21","hashOfConfig":"15"},{"size":594,"mtime":1611600020000,"results":"22","hashOfConfig":"15"},{"size":1460,"mtime":1611606366000,"results":"23","hashOfConfig":"15"},{"size":653,"mtime":1611609255000,"results":"24","hashOfConfig":"15"},{"size":1756,"mtime":1611606547000,"results":"25","hashOfConfig":"15"},{"size":2252,"mtime":1611599942000,"results":"26","hashOfConfig":"15"},{"size":617,"mtime":1611537749000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"p23hks",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/index.js",[],["56","57"],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/App.js",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/reportWebVitals.js",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/services/index.js",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Nav.jsx",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Home.jsx",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Postsform.jsx",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Footer.jsx",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Comments.jsx",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/CommentList.jsx",["58"],"import React from \"react\";\n\nfunction CommentList(props) {\n  const commentList = props.comments.filter((comment) => {\n    // console.log(comment.id);\n    // console.log(comment)\n    return comment.fields.feed[0] == props.id;\n\n  });\n  \n\n  console.log(props.id);\n\n  console.log(commentList);\n  return (\n    <div className=\"commentContainer\">\n      {commentList && props.comments &&\n        <>\n          {commentList.map((com) => (\n            <div className=\"commentitem\">\n              <h3>{com.fields.name}</h3>\n              <p>{com.fields.comment}</p>\n            </div>\n          ))}\n        </>\n      }\n    </div>\n  );\n}\n\nexport default CommentList;\n","/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Commentform.jsx",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Resources.jsx",[],"/Users/gigi/general_assembly/Ruby/unit_2/projects/mindmilk/client/src/components/Modallist.jsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":7,"column":35,"nodeType":"65","messageId":"66","endLine":7,"endColumn":37},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]